Unit tests:
===========


Overall:
========
* insert option -e [systems, [imperial, si...]..] which will print all systems and elements of systems
* protect conversion functions from overflow when too large result is to be produced
* add configuration file in /etc which should contain:
 	- currency table (updated from the internet on request)
	- default unit_t system for interwoven systems ( imperial and us customary system for example)
* add info messages when conversion has some quack to it (e.g. unit_t value is not exact or approximation)
* add -s main option - to suppress info messages
* do derived units of measurement conversion (e.g km/s to mi/h) 

Insert conversions:
===================

* Numeral systems
	- Gray code
	- BSD code
	- Duodecimal (12)
	- Vigesimal (20)
	- Trigesimal (30)
	- Sexagesimal (60)
	
* Measures and weights
	- English units (e.g. bushel, nail, palm, bovate, hide, teaspoon, rundlet, pin, firkin, kenning...)
	- Barrel to liter
	- Roman system
	- Greek system
	- Italian ---> wiki: units_of_measurement (italian metrification table picture)
	- Cubit e.g. Egyptian, Mayan (approximation)

* Burmese units of measurement

* Astronomical system of units
	- gigameter
	- parsec
	- megaparsec
	- solar mass ...

* non-standard units
	- Knot (nautical)
	- megaton
	- electronvolt

* Energy units
	- cal
	- J
	- kiloton

* Storage size
	- b, kb, Mb, MB ...

* Year
	- Gregorian
	- Julian
	- Jewish
	- Muslim ...

* Currency
	Create a program which fetches current currency relative values
	from bank sites. Use three letter currency codes
	- EUR
	- DOL ($)
	- POUND
	- DIN ...

* Misc
	colorhex to color255

* Aaproximation (non scientific - but estimate)
	- conversion from past time (old, e.g. 1850) sterling pound value to current currency value (based on past time value of gold to bread or wheat)


Interface:
==========

	* Create interface method:
		- conv bin 0100010 to dec
		- conv 12.3 kelvin to celsius
		- conv 13.02.2013 gregorian to muslim
		- conv 20 EUR to DIN
	
